version: "3.1"

services:
  bot:
    restart: always
    container_name: telegram_bot
    build:
      context: .
      dockerfile: ./src/Dockerfile
      args:
        MODE: "--with dev"
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - TOKEN=${TOKEN}
      - ADMIN_ID=${ADMIN_ID}
      - ADMIN_URL=${ADMIN_URL}
      - DEBUG=True
    command: python main.py
    volumes:
      - ./src:/src

  postgres:
    restart: always
    container_name: postgresql
    image: postgres:14.4
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./dumps:/dumps
    expose:
      - 5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  postgres-backup:
    image: rmiddle/pg_dump:latest
    container_name: postgres-backup
    links:
      - postgres
    environment:
      - PGUSER=${POSTGRES_USER}
      - PGPASSWORD=${POSTGRES_PASSWORD}
      - PGDB=${POSTGRES_DB}
      - PGHOST=postgres
      - CRON_SCHEDULE=0 0 * * 0
      - DELETE_OLDER_THAN=1
    volumes:
      - ./dumps:/dump
    command: dump-cron

volumes:
    postgres_data:
version: "3.10"

services:
  nginx:
    restart: always
    build:
      context: ./
      dockerfile: ./nginx/Dockerfile
    depends_on:
      - bot
    ports:
      - 80:80
    expose:
      - 80

  bot: &bot
    container_name: telegram_bot
    build:
      context: ./
      dockerfile: Dockerfile
      args:
        depend: --no-dev
    depends_on:
      - postgres
      - redis
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - TOKEN=${TOKEN}
      - ADMIN_ID=${ADMIN_ID}
      - ADMIN_URL=${ADMIN_URL}
      - REDIS_URL=${REDIS_URL}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_HOST=${REDIS_HOST}
      - WEBHOOK_HOST=${WEBHOOK_HOST}
      - WEBHOOK_PATH=${WEBHOOK_PATH}
      - WEBHOOK_URL=${WEBHOOK_URL}
      - WEBAPP_HOST=${WEBAPP_HOST}
      - WEBAPP_PORT=${WEBAPP_PORT}
      - DEBUG=False
    command: python ./src/actions.py
    volumes:
      - .:/app
    ports:
      - 433:433
    expose:
      - 433

  redis:
    container_name: redis
    image: redis:7
    ports:
      - 6379:6379

  postgres:
    container_name: postgresql
    image: postgres:14.4
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    expose:
      - 5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  celery:
    <<: *bot
    container_name: celery
    command: celery -A src.celery_config.celery_app worker --beat --loglevel=debug
    ports: []

volumes:
    postgres_data: